
package GUI;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * @author ngockatz
 */
public class MainForm extends javax.swing.JFrame {
    public BufferedReader br;
    public BufferedReader brclone;
    FileReader fileselected;
    public Graphm G;
    public Graphl G2;
    public StringBuffer road= new StringBuffer();
    public boolean directed;
    int[] V;
    int[] D=new int[100];
    boolean isDFS;
    String fromnode,tonode;
    Polynomial chroma;
    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grTraverse = new javax.swing.ButtonGroup();
        bttnImport = new javax.swing.JButton();
        bttnTraverse = new javax.swing.JButton();
        bttnMinSpan = new javax.swing.JButton();
        bttnDijkstra = new javax.swing.JButton();
        bttnChpoly = new javax.swing.JButton();
        lblGraph = new javax.swing.JLabel();
        optDFS = new javax.swing.JRadioButton();
        optBFS = new javax.swing.JRadioButton();
        cbFrom = new javax.swing.JComboBox<>();
        cbTo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblDistance = new javax.swing.JLabel();
        lblDirect = new javax.swing.JLabel();
        lblChroma = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GRAPH STUFFS");

        bttnImport.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        bttnImport.setText("Import Graph");
        bttnImport.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bttnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnImportActionPerformed(evt);
            }
        });

        bttnTraverse.setText("Traversal");
        bttnTraverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnTraverseActionPerformed(evt);
            }
        });

        bttnMinSpan.setText("Min Spanning");
        bttnMinSpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnMinSpanActionPerformed(evt);
            }
        });

        bttnDijkstra.setText("Shortest Path");
        bttnDijkstra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnDijkstraActionPerformed(evt);
            }
        });

        bttnChpoly.setText("Chromatic");
        bttnChpoly.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bttnChpolyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bttnChpolyMouseExited(evt);
            }
        });
        bttnChpoly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnChpolyActionPerformed(evt);
            }
        });

        lblGraph.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblGraph.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGraph.setText("First, import a graph");

        grTraverse.add(optDFS);
        optDFS.setSelected(true);
        optDFS.setText("DFS");
        optDFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optDFSActionPerformed(evt);
            }
        });

        grTraverse.add(optBFS);
        optBFS.setText("BFS");

        cbFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFromActionPerformed(evt);
            }
        });

        jLabel1.setText("From");

        jLabel2.setText("To");

        jLabel3.setText("=");

        lblDistance.setText(" ");

        lblDirect.setText(" ");

        lblChroma.setText(" ");
        lblChroma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblChromaMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(optBFS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(optDFS, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(bttnTraverse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblChroma, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bttnDijkstra, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cbTo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(lblDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bttnMinSpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bttnChpoly)
                        .addGap(113, 113, 113))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(lblDirect, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(lblGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(bttnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bttnImport, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDirect)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(optDFS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(optBFS))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bttnDijkstra, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(bttnTraverse)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(lblDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(lblChroma, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnChpoly)
                    .addComponent(bttnMinSpan))
                .addGap(35, 35, 35))
        );

        pack();
    }

    private void bttnMinSpanActionPerformed(java.awt.event.ActionEvent evt) {
        try{road.setLength(0);
        road.append("The following edges form a minimal spanning tree:\n");
        MST t = new MST(G);
        t.primMST(G.matrix,road);
        JOptionPane.showMessageDialog(null, road.toString(), "Minimal Spanning Tree", JOptionPane.INFORMATION_MESSAGE);
        }
        catch(NullPointerException e){JOptionPane.showMessageDialog(null, "No graph to find MST", "No graph on file", JOptionPane.ERROR_MESSAGE);}
    }

    private void bttnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnImportActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("C:/Users/"));
        chooser.setFileFilter(new FileNameExtensionFilter("Trivial Graph Format","tgf","txt"));    
        int val = chooser.showOpenDialog(this);
        
        if (val==JFileChooser.APPROVE_OPTION){
            try{
                fileselected=new FileReader(chooser.getSelectedFile());
                
                br = new BufferedReader(fileselected);
                lblGraph.setText("File successfully imported");
            }
            catch (IOException ioe){
                JOptionPane.showMessageDialog(null, "There was a problem reading the file", "Alert", JOptionPane.ERROR_MESSAGE);
                }
        }
        else {
            JOptionPane.showMessageDialog(null, "No file has been imported", "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (val==JFileChooser.APPROVE_OPTION){
        int d=JOptionPane.showConfirmDialog(null, "Is this graph directed?","Graph Direction",JOptionPane.YES_NO_OPTION);
        if (d==JOptionPane.YES_OPTION) {
            directed=true;
            lblDirect.setText("Directed Graph");
        }
        else {
            directed=false;
            lblDirect.setText("Undirected Graph");
        }
        try {
            G = Parsing.createGraph(br, G, directed);
            br.close();
            
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "There was an error in reading the graph file", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        V=new int[G.n()];
        for (int i=0;i<G.n();i++){
            cbFrom.addItem(""+i);
            cbTo.addItem(""+i);
        }
        }
    }

    private void bttnTraverseActionPerformed(java.awt.event.ActionEvent evt) {
        isDFS = optDFS.isSelected();
        try{

        if (isDFS) {
            Traversing.graphTraverse(G,true);
            JOptionPane.showMessageDialog(null,"In order: " + Traversing.out.toString(), "DFS Traversal", JOptionPane.INFORMATION_MESSAGE);
        }
        
        else{
            Traversing.graphTraverse(G, false);
            JOptionPane.showMessageDialog(null,"In order: " + Traversing.out.toString(), "BFS Traversal", JOptionPane.INFORMATION_MESSAGE);
        }
        }
        catch (NullPointerException e){JOptionPane.showMessageDialog(null, "No graph to traverse", "No graph on file", JOptionPane.ERROR_MESSAGE);}
    }

    private void optDFSActionPerformed(java.awt.event.ActionEvent evt) {
        
    }

    private void bttnDijkstraActionPerformed(java.awt.event.ActionEvent evt) {
        try{
        fromnode=(String) cbFrom.getSelectedItem();
        tonode=(String) cbTo.getSelectedItem();
        Dijkstra.Dijkstra(G, Integer.parseInt(fromnode), D);
        lblDistance.setText(""+D[Integer.parseInt(tonode)]);}
        catch (NumberFormatException e){JOptionPane.showMessageDialog(null, "No nodes to find shortest path", "Graph not found", JOptionPane.ERROR_MESSAGE);}
    }

    private void cbFromActionPerformed(java.awt.event.ActionEvent evt) {
        
    }

    private void bttnChpolyActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser chooser2 = new JFileChooser();
        chooser2.setDialogTitle("Reopen the graph file");
        chooser2.setCurrentDirectory(new java.io.File("C:/Users/"));
        chooser2.setFileFilter(new FileNameExtensionFilter("Trivial Graph Format","tgf","txt"));    

        int val = chooser2.showOpenDialog(this);
        
        if (val==JFileChooser.APPROVE_OPTION){
            try{
                FileReader fileselected=new FileReader(chooser2.getSelectedFile());
                
                brclone = new BufferedReader(fileselected);
                lblGraph.setText("For other functions, reimport the same graph by clicking above");
                lblDirect.setText("");
            }
            catch (IOException ioe){
                JOptionPane.showMessageDialog(null, "There was a problem reading the file", "Alert", JOptionPane.ERROR_MESSAGE);
                }
        }
        else {
            JOptionPane.showMessageDialog(null, "No file has been imported", "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (val==JFileChooser.APPROVE_OPTION){
        try {
            G2 = Parsing.createGraphl(brclone, G2, false);       
            
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "There was an error in reading the graph file", "Error", JOptionPane.ERROR_MESSAGE);
        }
        chroma=MLGraph.chromaPolynomial(G2);

        JOptionPane.showMessageDialog(null, "Chromatic function is: " + chroma 
                +"\nChromatic number is: " + chroma.minNo(), "Chromatic Function & Number", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void bttnChpolyMouseEntered(java.awt.event.MouseEvent evt) {
        lblChroma.setText("This button will ask you to reimport the graph");
    }

    private void lblChromaMouseExited(java.awt.event.MouseEvent evt) {
       
    }

    private void bttnChpolyMouseExited(java.awt.event.MouseEvent evt) {
        lblChroma.setText("");
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnChpoly;
    private javax.swing.JButton bttnDijkstra;
    private javax.swing.JButton bttnImport;
    private javax.swing.JButton bttnMinSpan;
    private javax.swing.JButton bttnTraverse;
    private javax.swing.JComboBox<String> cbFrom;
    private javax.swing.JComboBox<String> cbTo;
    private javax.swing.ButtonGroup grTraverse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblChroma;
    private javax.swing.JLabel lblDirect;
    private javax.swing.JLabel lblDistance;
    private javax.swing.JLabel lblGraph;
    private javax.swing.JRadioButton optBFS;
    private javax.swing.JRadioButton optDFS;
    // End of variables declaration//GEN-END:variables
}
